---
- include_tasks: unpack.yml

- name: git add all new files
  shell: git add -A
  args:
    chdir: "{{ item.git_repo_path }}"
  register: git_add_status

- name: git status brief
  shell: git status --porcelain | grep tenant | awk -F '/' '{print $3}' | sed 's/.json//'| tr '\n' '+' 
  args:
    chdir: "{{ item.git_repo_path }}"
  register: git_status

- set_fact:
    modified_tenants: "{{ git_status.stdout  }}"

- set_fact:
    candidate_version: "{{modified_tenants}}/{{ ansible_date_time.iso8601 | replace(':','-') }}"

- name: git username
  shell: git config user.name "{{ item.git_username }}"
  args:
    chdir: "{{ item.git_repo_path }}"
  when: item.git_username is defined

- name: git email
  shell: git config user.email "{{ item.git_email }}"
  args:
    chdir: "{{ item.git_repo_path }}"
  when: item.git_email is defined

- name: git commit
  shell: git commit -a -m "{{ item.git_msg }} for version {{ candidate_version }}"
  args:
    chdir: "{{ item.git_repo_path }}"
  register: git_commit
  ignore_errors: true
    
- name: git wrapper
  copy:
    dest: "{{ playbook_dir }}/.ssh/ssh"
    content: "ssh -i {{ git_temp_file.path }} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $*"
    mode: 0700

- name: Switch to new candidate branch
  shell: git checkout -b feature/{{ candidate_version }}
  args:
    chdir: "{{ GIT_REPO[0].git_repo_path }}"
  register: git_add_status

- name: git push
  shell: git push origin feature/{{ candidate_version }}
  args:
    chdir: "{{ item.git_repo_path }}"
  environment:
    GIT_SSH: "{{ playbook_dir }}/.ssh/ssh"
  when: git_commit is succeeded

- name: git status
  shell: git status
  args:
    chdir: "{{ item.git_repo_path }}"
  register: git_add_status
  when: git_commit is succeeded

- include_tasks: cleanup_keys.yml
