---
- include_tasks: unpack.yml

- name: git add all new files
  shell: git add -A
  args:
    chdir: "{{ item.git_repo_path }}"

- name: git status
  shell: git status
  args:
    chdir: "{{ item.git_repo_path }}"
  register: git_add_status

- name: Exit if no AS3 changes 
  meta: end_play
  when: "'nothing to commit' in git_add_status.stdout"

- name: git username
  shell: git config user.name "{{ item.git_username }}"
  args:
    chdir: "{{ item.git_repo_path }}"
  when: item.git_username is defined

- name: git email
  shell: git config user.email "{{ item.git_email }}"
  args:
    chdir: "{{ item.git_repo_path }}"
  when: item.git_email is defined

- name: git commit
  shell: git commit -a -m "{{ item.git_msg }} for version {{ candidate_version }}"
  args:
    chdir: "{{ item.git_repo_path }}"
  register: git_commit
  ignore_errors: true
    
- name: git wrapper
  copy:
    dest: "{{ playbook_dir }}/.ssh/ssh"
    content: "ssh -i {{ git_temp_file.path }} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $*"
    mode: 0700

- name: Delete local candidate configuration branch
  shell: git branch -D candidate
  args:
    chdir: "{{ GIT_REPO[0].git_repo_path }}"
  ignore_errors: true

- name: Switch to new candidate branch
  shell: git checkout -b candidate
  args:
    chdir: "{{ GIT_REPO[0].git_repo_path }}"
  register: git_add_status

- name: tag repository with version
  #Use static value versionTag-${REPO NAME} to map git version number from concord form input to correct repo variable
  shell: git tag -f {{ candidate_version }}
  args:
    chdir: "{{ item.git_repo_path }}"
  ignore_errors: true
  when: git_commit is succeeded

- name: git push
  shell: git push origin candidate --force --tag {{ candidate_version }}
  args:
    chdir: "{{ item.git_repo_path }}"
  environment:
    GIT_SSH: "{{ playbook_dir }}/.ssh/ssh"
  when: git_commit is succeeded

- name: git status
  shell: git status
  args:
    chdir: "{{ item.git_repo_path }}"
  register: git_add_status
  when: git_commit is succeeded

#- include_tasks: cleanup_keys.yml
