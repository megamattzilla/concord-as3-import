## Overview:
## Part 1: Save incoming JSON items to local file
## Part 2: Post AS3 JSON to F5 VEs
## Part 3: on AS3 success, create new feature branch in github


## TODO: add changed when to AS3 POST task
## Check AS3 burst handling is enabled 

---
- name: Part 1. Save incoming JSON items to local file
  hosts: localhost
  connection: local
  gather_facts: false
  #any_errors_fatal: true
  tasks:

  ##Part 1: Save incoming AS3 declaration to github repository
  tasks:

    - name: Gather date and time facts only
      setup:
        gather_subset:
          - "date_time"

    - name: Create base local files directory
      ansible.builtin.file:
        path: "{{ playbook_dir }}/localFiles"
        state: directory
        mode: '0755'
      run_once: true
    
    ## Load JSON items from file if this playbook is being ran outside of concord flow  
    - name: Load JSON items from file if this playbook is being ran outside of concord flow
      set_fact: "as3_inputs={{ lookup('file', 'scratch.json') }}"
      run_once: true
      when: as3_inputs is not defined

    - name: Create per-tenant file directory if it does not exist
      ansible.builtin.file:
        path: "{{ playbook_dir }}/localFiles/{{ item.environment }}"
        state: directory
        mode: '0755'
      loop: "{{ as3_inputs }}"
      loop_control:        
        label: "{{ item.tenant }}"
      run_once: true

    ## Create .JSON file for tenants  
    - name: Create .JSON file for tenants 
      ansible.builtin.copy:
        content: "{{ item | to_nice_json }}"
        dest: "{{ playbook_dir }}/localFiles/{{ item.environment }}/tenant-{{ item.tenant }}.json"
      loop: "{{ as3_inputs }}"
      loop_control:        
        label: "{{ item.tenant }}"
      run_once: true

    ## Find n-number tenant files
    - name: Find Tenant .JSON files
      find:
        paths: "{{ playbook_dir }}/localFiles"
        patterns: 'tenant*'
        recurse: yes
      register: findOutput    
      run_once: true

    ## Set empty JSON document
    - set_fact: 
        tenants_list: []
      run_once: true
    
    - name: Add contents of each JSON file to the list
      set_fact:
        tenants_list: "{{ tenants_list + [lookup('file', item.path) | from_json] }}"
      loop: "{{ findOutput.files }}"
   
    - name: Create the final combined dictionary
      set_fact:
        tenants: "{{ tenants_list }}"    

    - name: Build AS3 declaration
      template:
        src: "{{ playbook_dir }}/templates/as3.j2"
        dest: "{{ playbook_dir }}/localFiles/example-AS3.json"

    ## Part 2. POST AS3 changes to F5 VEs
- name: Part 2. POST AS3 changes to F5 VEs
  hosts: azure-wus2-f5demo-dev-A
  connection: local
  vars:
    provider:
      server: "{{ hostvars[inventory_hostname].bigip_mgmt }}"
      user: admin
      password: "{{ f5adminpassword }}"
      validate_certs: false
      server_port: 443
  gather_facts: false
  tasks:   

    - name: POST AS3 declaration to F5 VE
      uri:
        url: "https://{{ hostvars[inventory_hostname].bigip_mgmt }}:{{ port | default('443')}}/mgmt/shared/appsvcs/declare"
        user: "{{ provider.user }}"
        password: "{{ f5adminpassword }}"
        validate_certs: false
        force_basic_auth: yes
        method: POST
        timeout: 180
        body_format: json
        body: "{{ lookup('file', playbook_dir+'/localFiles/example-AS3.json') }}"
        return_content: yes
        status_code: [ 200, 202]
      register: as3id
      failed_when: "'failed' in as3id.json.results[0]"

    - name: Get async task status (skipped if AS3 task completed)
      uri:
        url: "https://{{ hostvars[inventory_hostname].bigip_mgmt }}:{{ port | default('443')}}/mgmt/shared/appsvcs/task/{{ as3id.json.id }}"
        user: "{{ provider.user }}"
        password: "{{ f5adminpassword }}"
        validate_certs: false
        force_basic_auth: yes
        method: GET
        return_content: yes
        status_code: 200
      register: patchtaskstatus
      until: patchtaskstatus.json.results[0].message == 'success'
      retries: 60 # retry X times  
      delay: 2 # pause for X sec b/w each call
      when:  as3id.status == 202

## Part 3: on AS3 success, promote candidate to current version
- name: Part 3. Promote candidate configuration to current version
  hosts: localhost
  gather_facts: false
  tasks: 
    - name: Pull Git Repo main branch
      run_once: true
      include_role:
        name: ansible-git
        tasks_from: pull      
      loop: "{{ GIT_REPO }}"
      loop_control:        
        label: "{{ item.name }}"
    
    - name: Copy local files into repo folder
      copy:
        src: "{{ playbook_dir }}/localFiles/"
        dest: "{{ GIT_REPO[0].git_repo_path }}/files/"
    
    - name: git push new feature branch
      vars:
        git_remove_local: true
      include_role:
        name: ansible-git
        tasks_from: push
      loop: "{{ GIT_REPO }}"
      loop_control:        
        label: "{{ item.name }}"